<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAgregar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAaCAYAAABCfffNAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5goUEAgOqkWOKQAABFZJREFU
        SEudlm1sU1UYx59uHaPsJWVjIgqYyUtAv6GomxLZZG7DvZYqA82C44vRDfyA8YMmzHcZa9etLd3S4TQB
        wUgCBIKagHxAEnV8UD84E00UjboRCXtzG53t8f8/t7d29bIpp/nn9pzneX7POfc5954rVm1LIF+e6imU
        al+WVHjssuJFji2aX+PLctZ0Zudj3Ml+4R7RdvrRn3FztqaDd0vpPhGApLRNpM7vzH6sY35xpTdjT4Un
        /d0KT9rH0Hnjmv4ex2mnH/11HOKbDt4VJ6Y0d7BAFj0nstk7j7PO2NyRWQbQ0fJ22+Cj7RKFlIWitNOP
        /joO8eS4g7fEyfG2vXu5yJ0ilVh6TWdOHq6tCP7dAnpD0Z9x8XiRO0S2dS+LZ0B76E0k8GZwuQWYVQ+C
        IqmQ/6gI48khbwO4utV25ejC1fsXOlDEdjhOpwTGZVOwa5V70izsCU3DZ3+9P89Bbm1njogrkCf37NW1
        2IYlD1sEqbL9oraGblVHPn9Lnf66R73wQYkes/KlyCFvXSv4/jwR7A6sZMFtmN0FqwBqE4A731mrroz+
        otgOfLpLj1n5miKPXPLl4bf1Kp7E7ZiwcqaMJGvU4MhPKoZf8FzznEnIqwSXfP2QoVh91o6Gbi6JoH7p
        feRzRy3F0vqTjbzfj7T9o5J9onb0rlKDwz/qJP6zz+qxZB+rpORWgy9VPsc6dC6bhjKoMVyoWk/Uq1dO
        urT4P3CuRV37c0gnOfNNWO09UZewv3pyi3r+/QdVpdeemuQy+Sh85gY+taaBM/J8slNNXB9V16cnoQmt
        yF9TOgHbdDSSGKfY/+z74wp3RU8ykQRc8rm7iso9tl+Tk7R91KhnPTp5VY1QE3+osalrKhqL6iSTkXE9
        NjJpaHxqWJ3/7iiSZM1MAi753L6rsawB00CnJw4sVrsOF6ndh4u1Wg49oN441aCujv+mV3Os34Ox++FT
        rLUbt6oJWxyFTiQwkqQNkI8nMtcJ45lkIwvPFW2KFxRvVvV072rsrpmFN+3mNZlBkUu+fHgpbEPBXsZg
        LNXJFAE3sYVj5B6/1GvThw7u270oUmKHpcpIsvZ/JQHvZ3LJ1weNO1AwDx2+HC1XYyYZSiRpmStJjDxy
        yZfcZ3CEeu14XhasRKEuWgToGrmD+Spwtln1XXhJNR9aP/sLEhzyyCVfGkK3y1ao+HW+LDM3wuFbq0CK
        YC0LmynGk1MEHtkNoaX6SJG6LqfxSkbDMVoKxy+sAHOJcYwnx4WPCnJntBpftri6Fsr610SqOhxrsP1C
        KN6QFSxV9EMNQoxjPCeMYzhOTmnY0/J4cLHecS5/vgOz2oj/PszwSyOhbcw4Emxj7GO8H+e5D34l9MfE
        dDw5szbsCOkfuKiPZECkoXuZvdqXvQTb8T6cO1WQm1f2sXOWbO9ZbqcffOSrKz/8+ytltkbnxjDeCPgG
        AFB/aODh0l80+oo+x2u7cmVHeBVWcCO4yN/d+BoxzEnb3gAAAABJRU5ErkJggg==
</value>
  </data>
</root>